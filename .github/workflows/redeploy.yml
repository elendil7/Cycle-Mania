name: Redeploy to Oracle on Push to Main

# On push to main branch of repository...
on:
  push:
    branches:
      - main

jobs:
  redeploy:
    # Run on Ubuntu (Oracle server is Ubuntu / Linux)
    runs-on: ubuntu-latest
    # Accommodate the retrieval of environmental secrets that are only available in prod environment
    environment: prod

    # Pull changes from GitHub repo to Oracle server, and set variable to "true" if changes are detected
    steps:
      # Checkout code from GitHub repo
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v2

      # Check for changes in /src folder or the config.ts file, and store result in variable
      - name: Check for changes in /src folder or the config.ts file
        id: changes
        run: |
          if [[ $(git diff --name-only HEAD^ HEAD) =~ ^src/|^\config\.ts$ ]]; then
            echo "::set-output name=changed::true"
          else
            echo "::set-output name=changed::false"
          fi

      # Exit workflow if no changes detected
      - name: Exit workflow if no changes
        if: ${{ steps.changes.outputs.changed == 'false' }}
        run: exit 0

      # Connect to Oracle server via SSH and execute deploy script there
      - name: Connect to Oracle server via SSH and execute commands
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.ORACLE_SERVER_HOST }}
          username: ${{ secrets.ORACLE_SERVER_USERNAME }}
          key: ${{ secrets.ORACLE_SERVER_PRIVATE_KEY }}
          port: 22
          command_timeout: 20m
          script: |
            echo "** Connected to Oracle server via SSH. **"
            echo "Running deploy script..."

            echo "Pulling changes from GitHub repo..."
            cd /home/opc
            if [ -d "cycle-mania" ]; then
              cd cycle-mania
              git pull
            else
              git clone https://github.com/${{github.repository}}
              cd cycle-mania
            fi
            echo "Changes pulled from GitHub repo."

            echo "Copying environmental secrets from GitHub repo to Oracle server..."
            echo "" > .env
            echo "DISCORD_BOT_ID=${{ secrets.DISCORD_BOT_ID }}" >> .env
            echo "DISCORD_BOT_OWNER_ID=${{ secrets.DISCORD_BOT_OWNER_ID }}" >> .env
            echo "DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}" >> .env
            echo "DISCORD_CHANNEL_ACTIVITIES_ID=${{ secrets.DISCORD_CHANNEL_ACTIVITIES_ID }}" >> .env
            echo "DISCORD_CHANNEL_LEADERBOARD_ID=${{ secrets.DISCORD_CHANNEL_LEADERBOARD_ID }}" >> .env
            echo "MONGO_DB_NAME=${{ secrets.MONGO_DB_NAME }}" >> .env
            echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> .env
            echo "MONGO_USERNAME=${{ secrets.MONGO_USERNAME }}" >> .env
            echo "PROD=${{ secrets.PROD }}" >> .env
            echo "STRAVA_ACCESS_TOKEN=${{ secrets.STRAVA_ACCESS_TOKEN }}" >> .env
            echo "STRAVA_CLIENT_ID=${{ secrets.STRAVA_CLIENT_ID }}" >> .env
            echo "STRAVA_CLIENT_SECRET=${{ secrets.STRAVA_CLIENT_SECRET }}" >> .env
            echo "STRAVA_REFRESH_TOKEN=${{ secrets.STRAVA_REFRESH_TOKEN }}" >> .env
            echo "STRAVA_USER_COOKIE=${{ secrets.STRAVA_USER_COOKIE }}" >> .env
            echo "Environmental secrets copied from GitHub repo to Oracle server"

            echo "Building new Docker image..."
            sudo docker build --tag cycle-mania:${{ github.sha }} .
            echo "New Docker image built."

            echo "Stopping and deleting existing Docker container..."
            sudo docker stop cycle-mania || true
            sudo docker rm cycle-mania || true
            echo "Existing Docker container stopped and deleted."

            echo "Running new Docker container..."
            sudo docker run -d --name cycle-mania --env-file .env cycle-mania:${{ github.sha }}
            echo "New Docker container running."

            echo "Waiting for new Docker container to start..."
            sleep 10
            echo "New Docker container started."

            echo "Checking if new Docker container is running..."
            sudo docker ps | grep cycle-mania
            echo "New Docker container is running."

            echo "Deployment successful."
            exit 0

      # Send message to Discord channel to confirm deployment
      # - name: Discord Message Notify
      #   uses: appleboy/discord-action@0.0.3
      #   with:
      #     webhook_id: ${{ secrets.DOCKER_WEBHOOK_ID }}
      #     webhook_token: ${{ secrets.DOCKER_WEBHOOK_TOKEN }}
      #     message: |
      #       **Deployment successful**
      #       *Docker image deployed to Oracle server.*

      #       - Commit: `${{ github.sha }}`
      #       - Branch: `${{ github.ref }}`
      #       - Event: `${{ github.event_name }}`
      #       -
      #     color: 43520
      #     avatar_url: https://images-ext-1.discordapp.net/external/fdSG9WottHrn1cVRMO0RQC5t0hvwHVKtgYpTJWJjk6s/https/cdn-icons-png.flaticon.com/512/190/190411.png
